<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{title}} - Admin Panel</title>
  
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#eff6ff',
              100: '#dbeafe',
              500: '#3b82f6',
              600: '#2563eb',
              700: '#1d4ed8',
              900: '#1e3a8a',
            }
          }
        }
      }
    }
  </script>
  
  <!-- Custom Components CSS -->
  <link rel="stylesheet" href="/public/css/components.css">
  
  
  <!-- Turbo -->
  <script src="https://unpkg.com/@hotwired/turbo@7.3.0/dist/turbo.es2017-umd.js"></script>
  <script>
    // Turbo Drive 최적화 설정
    window.Turbo = window.Turbo || {};
    window.Turbo.session = window.Turbo.session || {};
    
    // 즉시 렌더링과 부드러운 전환을 위한 설정
    window.Turbo.session.drive = true;
    window.Turbo.session.cacheTimestampParam = "_turbo_cache";
    
    // 깜빡임 방지를 위한 설정
    document.addEventListener('turbo:before-visit', function(event) {
      // 사이드바 상태 저장
      const sidebarOpen = document.querySelector('#sidebar-manager [x-data]')?.__x?.$data?.sidebarOpen;
      if (typeof sidebarOpen !== 'undefined') {
        sessionStorage.setItem('sidebarState', JSON.stringify({
          open: sidebarOpen,
          timestamp: Date.now()
        }));
      }
    });
    
    document.addEventListener('turbo:load', function(event) {
      // 사이드바 상태 복원
      const savedState = sessionStorage.getItem('sidebarState');
      if (savedState) {
        try {
          const state = JSON.parse(savedState);
          // 5분 이내의 상태만 복원
          if (Date.now() - state.timestamp < 300000) {
            const sidebarManager = document.querySelector('#sidebar-manager [x-data]')?.__x;
            if (sidebarManager && sidebarManager.$data) {
              sidebarManager.$data.sidebarOpen = state.open;
            }
          }
        } catch (e) {
          console.log('사이드바 상태 복원 실패:', e);
        }
      }
    });
    
    // Turbo 로딩 설정 (옵셔널)
    window.TURBO_LOADING_ENABLED = false; // 기본값: false (로딩 화면 비활성화)
    
    // Turbo 로딩 상태 추적
    let turboLoadingActive = false;
    
    // 로딩 상태 설정 함수
    function setTurboLoading(loading) {
      // 로딩이 비활성화된 경우 아무것도 하지 않음
      if (!window.TURBO_LOADING_ENABLED) {
        return;
      }
      
      turboLoadingActive = loading;
      if (loading) {
        document.documentElement.classList.add('turbo-loading');
      } else {
        document.documentElement.classList.remove('turbo-loading');
      }
      console.log(loading ? '🔄 Turbo loading started' : '✅ Turbo loading finished');
    }
    
    // 로딩 활성화/비활성화 함수
    window.enableTurboLoading = function(enabled = true) {
      window.TURBO_LOADING_ENABLED = enabled;
      if (!enabled && turboLoadingActive) {
        // 로딩을 비활성화하면 현재 로딩 상태도 종료
        turboLoadingActive = false;
        document.documentElement.classList.remove('turbo-loading');
        console.log('🚫 Turbo loading disabled');
      }
      console.log(`⚙️ Turbo loading ${enabled ? 'enabled' : 'disabled'}`);
    }
    
    // Turbo 디버깅 및 설정
    document.addEventListener('turbo:before-visit', (event) => {
      console.log('🚀 Turbo visit starting to:', event.detail.url);
      setTurboLoading(true);
    });
    
    document.addEventListener('turbo:visit', (event) => {
      console.log('🔄 Turbo visit in progress');
      setTurboLoading(true);
    });
    
    document.addEventListener('turbo:load', (event) => {
      console.log('✅ Turbo load complete');
      setTurboLoading(false);
    });
    
    document.addEventListener('turbo:frame-load', (event) => {
      console.log('🖼️ Turbo frame loaded:', event.target.id);
      // 프레임 로딩이 완료되면 전체 로딩도 완료로 간주
      if (event.target.id === 'main-content') {
        setTurboLoading(false);
      }
    });
    
    document.addEventListener('turbo:before-frame-render', (event) => {
      console.log('🎨 Turbo frame render:', event.target.id);
    });
    
    document.addEventListener('turbo:frame-render', (event) => {
      console.log('🎨 Turbo frame rendered:', event.target.id);
      // 메인 콘텐츠 프레임이 렌더링되면 로딩 완료
      if (event.target.id === 'main-content') {
        setTurboLoading(false);
      }
    });
    
    // 추가 안전장치: 일정 시간 후 강제로 로딩 종료
    let loadingTimeoutId = null;
    document.addEventListener('turbo:before-visit', () => {
      // 기존 타임아웃 클리어
      if (loadingTimeoutId) {
        clearTimeout(loadingTimeoutId);
      }
      // 3초 후 강제 종료 (더 짧게 설정)
      loadingTimeoutId = setTimeout(() => {
        console.warn('⚠️ Turbo loading timeout - force ending');
        turboLoadingActive = false;
        document.documentElement.classList.remove('turbo-loading');
        loadingTimeoutId = null;
      }, 3000);
    });
    
    // 로딩 완료시 타임아웃 클리어
    function clearLoadingTimeout() {
      if (loadingTimeoutId) {
        clearTimeout(loadingTimeoutId);
        loadingTimeoutId = null;
      }
    }
    
    // 모든 로딩 완료 이벤트에서 타임아웃 클리어
    document.addEventListener('turbo:load', clearLoadingTimeout);
    document.addEventListener('turbo:frame-load', clearLoadingTimeout);
    document.addEventListener('turbo:frame-render', clearLoadingTimeout);
    
    // Turbo와 Alpine.js 호환성 설정
    document.addEventListener('turbo:before-render', () => {
      console.log('🧹 Cleaning up Alpine before render');
      // Alpine 정리 (사이드바 제외)
      if (window.Alpine) {
        document.querySelectorAll('[x-data]:not([data-permanent-element])').forEach(el => {
          if (el._x_dataStack) {
            el._x_dataStack.forEach(data => {
              if (data.$destroy) data.$destroy();
            });
          }
        });
      }
    });
    
    document.addEventListener('turbo:render', () => {
      console.log('🔧 Re-initializing Alpine after render');
      // Alpine 재초기화 (사이드바 제외)
      if (window.Alpine) {
        const wrapper = document.querySelector('#main-content-wrapper');
        if (wrapper) {
          Alpine.initTree(wrapper);
        }
      }
    });
    
    // 캐시 최적화
    document.addEventListener('turbo:before-cache', () => {
      console.log('💾 Preparing Turbo cache');
      // 캐시 전 정리 작업
      document.querySelectorAll('[data-turbo-temporary]').forEach(el => el.remove());
    });
    
    // 페이지 완전 로딩 시에도 안전장치 (더 강력하게)
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => {
        console.log('📄 DOMContentLoaded - force ending loading state');
        turboLoadingActive = false;
        document.documentElement.classList.remove('turbo-loading');
        clearLoadingTimeout();
      }, 100);
    });
    
    // 윈도우 로드 완료 시 최종 안전장치
    window.addEventListener('load', () => {
      setTimeout(() => {
        console.log('🌐 Window load complete - force ending loading state');
        turboLoadingActive = false;
        document.documentElement.classList.remove('turbo-loading');
        clearLoadingTimeout();
        
        // Loading.js의 모든 로딩도 정리
        if (window.clearAllLoadings) {
          window.clearAllLoadings();
        }
      }, 200);
    });
    
    // 추가 이벤트로 로딩 상태 강제 종료
    document.addEventListener('turbo:frame-render', (event) => {
      if (event.target.id === 'main-content') {
        setTimeout(() => {
          console.log('🎯 Main content rendered - force ending all loading');
          turboLoadingActive = false;
          document.documentElement.classList.remove('turbo-loading');
          clearLoadingTimeout();
          
          if (window.clearAllLoadings) {
            window.clearAllLoadings();
          }
        }, 100);
      }
    });
    
    // 페이지 변경 완료 후 안전장치
    document.addEventListener('turbo:visit', () => {
      // 5초 후 강제 종료 (더 긴 타임아웃)
      setTimeout(() => {
        console.warn('🚨 Emergency loading cleanup - 5 second timeout');
        turboLoadingActive = false;
        document.documentElement.classList.remove('turbo-loading');
        clearLoadingTimeout();
        
        if (window.clearAllLoadings) {
          window.clearAllLoadings();
        }
      }, 5000);
    });
    
    // 개발자 도구에서 사용할 수 있는 강제 로딩 정리 함수
    window.forceStopLoading = function() {
      console.log('🛑 Force stopping all loading states...');
      
      // Turbo 로딩 정리
      turboLoadingActive = false;
      document.documentElement.classList.remove('turbo-loading');
      clearLoadingTimeout();
      
      // Loading.js 로딩 정리
      if (window.clearAllLoadings) {
        window.clearAllLoadings();
      }
      
      // Loading.js의 전역 로딩도 직접 정리
      if (window.Loading) {
        window.Loading.hideAll();
      }
      
      console.log('✅ All loading states cleared');
    };
    
    console.log('🚀 Turbo loading management initialized. Use forceStopLoading() to manually clear loading states.');
  </script>
  
  <!-- Alpine.js -->
  <script defer src="https://unpkg.com/alpinejs@3.13.0/dist/cdn.min.js" data-turbo-permanent></script>
  
  
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- Chart Libraries (loaded once) -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js" data-turbo-permanent></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.44.0/dist/apexcharts.min.js" data-turbo-permanent></script>
  <script src="https://d3js.org/d3.v7.min.js" data-turbo-permanent></script>
  <script src="https://cdn.plot.ly/plotly-2.27.0.min.js" data-turbo-permanent></script>
  <script src="https://fastly.jsdelivr.net/npm/echarts@5.5.0/dist/echarts.min.js" data-turbo-permanent></script>

  <!-- Editor Libraries -->
  <!-- TinyMCE -->
  <script src="https://cdn.tiny.cloud/1/fmej1elogke795ozwx1e6g5hhpz0l57egzflef2djimivy0y/tinymce/8/tinymce.min.js" referrerpolicy="origin" crossorigin="anonymous" data-turbo-permanent></script>
  
  <!-- CKEditor5 -->
  <script src="https://cdn.ckeditor.com/ckeditor5/40.0.0/classic/ckeditor.js" data-turbo-permanent></script>
  
  <!-- Quill.js -->
  <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
  <script src="https://cdn.quilljs.com/1.3.7/quill.min.js" data-turbo-permanent></script>
  
  <!-- Monaco Editor -->
  <script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs/loader.js" data-turbo-permanent></script>
  
  
  
  
  <style>
    /* 깜박임 방지 스타일 */
    [x-cloak] { display: none !important; }
    
    /* Turbo로딩 중 깜박임 방지 */
    html.turbo-loading body {
      opacity: 0.95;
      transition: opacity 150ms ease-out;
    }
    
    /* 기본 스타일로 FOUC 방지 */
    body {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background-color: #f9fafb;
      transition: opacity 150ms ease-in;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    
    /* 중요한 UI 요소들의 기본 스타일 */
    .btn {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      font-weight: 500;
      transition: all 150ms ease;
    }
    
    /* 사이드바 기본 스타일 */
    .sidebar-base {
      background: white;
      border-right: 1px solid #e5e7eb;
    }
    
    /* 메인 컨테이너 스타일 - 사이드바 공간 확보 */
    #main-content-wrapper {
      margin-left: 256px; /* 기본적으로 사이드바 너비만큼 마진 */
      width: calc(100% - 256px); /* 사이드바 너비를 제외한 나머지 공간 사용 */
      transition: margin-left 300ms ease-in-out, width 300ms ease-in-out;
      position: relative;
      z-index: 10; /* 사이드바보다 낮지만 콘텐츠 보장 */
      min-height: 100vh;
      box-sizing: border-box;
    }
    
    /* 사이드바가 축소되었을 때를 위한 스타일 - 우선순위 강화 */
    body.sidebar-collapsed #main-content-wrapper,
    .sidebar-collapsed #main-content-wrapper {
      margin-left: 64px !important; /* 축소된 사이드바 너비만큼 */
      width: calc(100% - 64px) !important; /* 축소된 사이드바 너비를 제외한 나머지 공간 사용 */
    }
    
    /* Alpine.js x-show 상태에 따른 직접 대응 */
    #main-content-wrapper[data-sidebar-collapsed="true"] {
      margin-left: 64px !important;
      width: calc(100% - 64px) !important;
    }
    
    /* 내부 콘텐츠가 전체 너비를 사용하도록 강제 */
    #main-content-wrapper {
      /* 확장성을 위해 flex 사용 */
      display: flex;
      flex-direction: column;
    }
    
    #main-content-wrapper > * {
      width: 100%;
      max-width: none !important;
      flex: 1;
    }
    
    /* main 요소도 전체 너비 사용 */
    #main-content-wrapper main {
      width: 100%;
      max-width: none !important;
    }
    
    /* turbo-frame도 전체 너비 사용 */
    #main-content-wrapper turbo-frame {
      width: 100%;
      max-width: none !important;
      display: block;
    }
    
    /* 모든 하위 요소들이 최대 너비 제한을 갖지 않도록 */
    #main-content-wrapper * {
      max-width: none !important;
    }
    
    /* 대시보드 특정 요소들 */
    #dashboard-container,
    #dashboard-container * {
      max-width: none !important;
    }
    
    /* Grid 컨테이너들도 전체 너비 사용 */
    .grid {
      width: 100% !important;
      max-width: none !important;
    }
    
    /* Footer는 main-content-wrapper와 동일하게 사이드바 옆에 위치 */
    footer {
      margin-left: 256px; /* 사이드바 너비만큼 마진 */
      width: calc(100% - 256px); /* 사이드바 너비를 제외한 나머지 공간 사용 */
      transition: margin-left 300ms ease-in-out, width 300ms ease-in-out;
      position: relative;
      z-index: 10;
    }
    
    /* 사이드바가 축소되었을 때 Footer도 조정 */
    body.sidebar-collapsed footer,
    .sidebar-collapsed footer {
      margin-left: 64px !important; /* 축소된 사이드바 너비만큼 */
      width: calc(100% - 64px) !important; /* 축소된 사이드바 너비를 제외한 나머지 공간 사용 */
    }
    
    /* 모바일에서는 전체 너비 사용 */
    @media (max-width: 768px) {
      #main-content-wrapper {
        margin-left: 0 !important;
        width: 100% !important; /* 모바일에서는 전체 너비 */
      }
      
      .sidebar-collapsed #main-content-wrapper {
        margin-left: 0 !important;
        width: 100% !important;
      }
      
      /* 모바일에서 Footer도 전체 너비 사용 */
      footer {
        margin-left: 0 !important;
        width: 100% !important;
      }
    }
  </style>
</head>
<body>
  
  <!-- Sidebar (Persistent) -->
  <div id="persistent-sidebar" data-turbo-permanent>
    {{> sidebar}}
  </div>
  
  <!-- Main Content Area -->
  <div id="main-content-wrapper" class="transition-all duration-300 ease-in-out">
    
    <!-- Mobile Header Bar -->
    {{!-- <div class="md:hidden bg-white shadow-sm border-b border-gray-200 sticky top-0 z-30">
      <div class="flex items-center justify-between h-16 px-4">
        <button
          onclick="document.querySelector('[x-data*=\"sidebarManager\"]').__x.$data.toggleSidebar()"
          class="p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
        >
          <i class="fas fa-bars text-xl"></i>
        </button>
        <h2 class="text-lg font-semibold text-gray-900">Admin Panel</h2>
        <div class="w-10"></div>  
      </div>
    </div> --}}
    
    <!-- Top Header -->
    {{> header}}
    
    <!-- Main Content -->
    <main class="bg-gray-50 p-6">
      {{{body}}}
    </main>
    
  </div>
  
  <!-- Footer (Outside of main-content-wrapper) -->
  {{> footer}}

  
  <!-- Socket.io for dev reload (development only) -->
  {{#if isDevelopment}}
  <script src="/socket.io/socket.io.js" data-turbo-permanent></script>
  <script src="/public/js/dev-reload.js" data-turbo-permanent></script>
  <script src="/public/js/class-helper.js" data-turbo-permanent></script>
  <script src="/public/js/interactive-dev.js" data-turbo-permanent></script>
  {{/if}}
  
  <!-- Error Handling & UI Systems -->
  <script src="/public/js/toast.js" data-turbo-permanent></script>
  <script src="/public/js/modal.js" data-turbo-permanent></script>
  <script src="/public/js/alert.js" data-turbo-permanent></script>
  <script src="/public/js/loading.js" data-turbo-permanent></script>
  <script src="/public/js/debounce.js" data-turbo-permanent></script>
  <script src="/public/js/api.js" data-turbo-permanent></script>
  
  <!-- Dashboard Components -->
  <script src="/public/js/components/data-provider.js" data-turbo-permanent></script>
  <script src="/public/js/components/chart-manager.js" data-turbo-permanent></script>

  <!-- Table Manager -->
  <script src="https://code.jquery.com/jquery-3.7.1.min.js" data-turbo-permanent></script>
  <script src="/public/js/table-manager.js" data-turbo-permanent></script>
  <script src="/public/js/ag-grid-test.js" data-turbo-permanent></script>

  <!-- Browser Interaction Logger -->
  <script src="/public/js/interaction-logger.js" data-turbo-permanent></script>

  <!-- Editor Manager (Simple Version) -->
  <script src="/public/js/editors-simple.js" data-turbo-permanent></script>

  <!-- Custom Scripts -->
  <script src="/public/js/app.js" data-turbo-permanent></script>
</body>
</html>