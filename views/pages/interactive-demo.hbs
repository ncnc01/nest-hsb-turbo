<!-- Hero Section with Gradient Background -->
<div class="relative overflow-hidden bg-gradient-to-br from-primary-50 via-white to-blue-50">
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-gradient-to-r from-primary-100/20 to-blue-100/20"></div>
    <svg class="absolute bottom-0 left-0 right-0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
      <path fill="white" fill-opacity="1" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,112C672,96,768,96,864,112C960,128,1056,160,1152,160C1248,160,1344,128,1392,112L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
    </svg>
  </div>
  
  <div class="relative content-wrapper py-16">
    <div class="text-center">
      <div class="inline-flex items-center px-4 py-2 bg-primary-100 text-primary-800 text-sm font-medium rounded-full mb-6">
        <i class="fas fa-rocket mr-2"></i>
        Interactive Development Mode
      </div>
      <h1 class="text-5xl font-bold text-gray-900 mb-4">
        HBS <span class="bg-gradient-to-r from-primary-600 to-blue-600 bg-clip-text text-transparent">Interactive</span>
      </h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
        React처럼 상태 관리와 이벤트를 사용하여 인터랙티브한 웹 애플리케이션을 구축하세요
      </p>
      <div class="flex items-center justify-center gap-4">
        <div class="flex items-center text-green-600">
          <i class="fas fa-check-circle mr-2"></i>
          <span class="text-sm font-medium">Hot Reload</span>
        </div>
        <div class="flex items-center text-blue-600">
          <i class="fas fa-sync-alt mr-2"></i>
          <span class="text-sm font-medium">State Management</span>
        </div>
        <div class="flex items-center text-purple-600">
          <i class="fas fa-bolt mr-2"></i>
          <span class="text-sm font-medium">Real-time Updates</span>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="content-wrapper py-12">

  <!-- 기능 소개 그리드 -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-16">
    <div class="text-center group">
      <div class="w-16 h-16 bg-gradient-to-r from-primary-500 to-blue-500 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200">
        <i class="fas fa-code text-white text-xl"></i>
      </div>
      <h3 class="text-lg font-semibold text-gray-900 mb-2">선언적 바인딩</h3>
      <p class="text-gray-600 text-sm">HTML 속성만으로 상태와 이벤트를 관리</p>
    </div>
    <div class="text-center group">
      <div class="w-16 h-16 bg-gradient-to-r from-green-500 to-teal-500 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200">
        <i class="fas fa-sync-alt text-white text-xl"></i>
      </div>
      <h3 class="text-lg font-semibold text-gray-900 mb-2">실시간 동기화</h3>
      <p class="text-gray-600 text-sm">상태 변경 시 UI가 자동으로 업데이트</p>
    </div>
    <div class="text-center group">
      <div class="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200">
        <i class="fas fa-tools text-white text-xl"></i>
      </div>
      <h3 class="text-lg font-semibold text-gray-900 mb-2">개발자 도구</h3>
      <p class="text-gray-600 text-sm">브라우저 콘솔에서 상태 디버깅</p>
    </div>
  </div>

  <!-- 인터랙티브 예제들 -->
  <div class="space-y-8">

    <!-- 카운터 예제 - 개선된 디자인 -->
    <section class="relative">
      <div class="absolute inset-0 bg-gradient-to-r from-primary-50/50 to-blue-50/50 rounded-3xl"></div>
      <div class="relative bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl rounded-3xl overflow-hidden">
        <div class="bg-gradient-to-r from-primary-500 to-blue-500 px-8 py-6">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
              <i class="fas fa-plus-minus text-white"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold text-white">스마트 카운터</h2>
              <p class="text-primary-100">React useState와 동일한 상태 관리</p>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <div class="text-center mb-8">
            <div class="inline-block">
              <div class="relative">
                <div class="absolute inset-0 bg-gradient-to-r from-primary-500 to-blue-500 rounded-full blur-xl opacity-30"></div>
                <div class="relative bg-gradient-to-r from-primary-500 to-blue-500 text-white text-6xl font-bold w-32 h-32 rounded-full flex items-center justify-center shadow-2xl" data-hbs-state="counter" data-hbs-value="0">0</div>
              </div>
            </div>
          </div>
          
          <div class="flex items-center justify-center gap-4 mb-8">
            <button 
              class="group relative overflow-hidden bg-gradient-to-r from-green-500 to-emerald-500 text-white px-8 py-4 rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200"
              data-hbs-click="incrementState:counter"
            >
              <i class="fas fa-plus mr-2"></i>
              증가
              <div class="absolute inset-0 bg-white/0 group-hover:bg-white/10 transition-colors duration-200"></div>
            </button>
            
            <button 
              class="group relative overflow-hidden bg-gradient-to-r from-red-500 to-pink-500 text-white px-8 py-4 rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200"
              data-hbs-click="decrementCount"
            >
              <i class="fas fa-minus mr-2"></i>
              감소
              <div class="absolute inset-0 bg-white/0 group-hover:bg-white/10 transition-colors duration-200"></div>
            </button>
            
            <button 
              class="group relative overflow-hidden bg-gradient-to-r from-gray-500 to-gray-600 text-white px-8 py-4 rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200"
              data-hbs-click="setState:counter=0"
            >
              <i class="fas fa-redo mr-2"></i>
              리셋
              <div class="absolute inset-0 bg-white/0 group-hover:bg-white/10 transition-colors duration-200"></div>
            </button>
          </div>
          
          <div class="bg-gray-900 rounded-2xl p-6">
            <div class="flex items-center gap-2 mb-4">
              <div class="flex gap-1">
                <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              </div>
              <span class="text-gray-400 text-sm font-mono">counter.hbs</span>
            </div>
            <pre class="text-green-400 text-sm font-mono leading-relaxed"><code>&lt;div data-hbs-state="counter" data-hbs-value="0"&gt;0&lt;/div&gt;
&lt;button data-hbs-click="incrementState:counter"&gt;증가&lt;/button&gt;
&lt;button data-hbs-click="setState:counter=0"&gt;리셋&lt;/button&gt;</code></pre>
          </div>
        </div>
      </div>
    </section>

    <!-- 토글 패널 - 개선된 디자인 -->
    <section class="relative">
      <div class="absolute inset-0 bg-gradient-to-r from-purple-50/50 to-pink-50/50 rounded-3xl"></div>
      <div class="relative bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl rounded-3xl overflow-hidden">
        <div class="bg-gradient-to-r from-purple-500 to-pink-500 px-8 py-6">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
              <i class="fas fa-toggle-on text-white"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold text-white">스마트 토글</h2>
              <p class="text-purple-100">불린 상태를 시각적으로 관리</p>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <div class="flex items-center justify-between mb-8">
            <button 
              class="group relative overflow-hidden bg-gradient-to-r from-purple-500 to-pink-500 text-white px-8 py-4 rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200"
              data-hbs-click="toggleState:isVisible"
            >
              <i class="fas fa-eye mr-2"></i>
              마법 패널 토글
              <div class="absolute inset-0 bg-white/0 group-hover:bg-white/10 transition-colors duration-200"></div>
            </button>
            
            <div 
              class="relative bg-gradient-to-r from-indigo-500 to-purple-500 text-white p-6 rounded-2xl shadow-2xl transform transition-all duration-500 ease-out opacity-0 scale-90"
              data-hbs-component="togglePanel"
              data-hbs-dependencies="isVisible"
              style="display: none;"
            >
              <div class="absolute inset-0 bg-gradient-to-r from-indigo-500/80 to-purple-500/80 rounded-2xl blur-xl"></div>
              <div class="relative">
                <div class="flex items-center gap-3 mb-3">
                  <i class="fas fa-star text-yellow-300 text-xl"></i>
                  <h3 class="text-lg font-bold">마법이 나타났습니다! ✨</h3>
                </div>
                <p>이 패널은 상태에 따라 동적으로 나타나고 사라집니다.</p>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-900 rounded-2xl p-6">
            <div class="flex items-center gap-2 mb-4">
              <div class="flex gap-1">
                <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              </div>
              <span class="text-gray-400 text-sm font-mono">toggle.hbs</span>
            </div>
            <pre class="text-purple-400 text-sm font-mono leading-relaxed"><code>&lt;button data-hbs-click="toggleState:isVisible"&gt;토글&lt;/button&gt;
&lt;div data-hbs-component="togglePanel" 
     data-hbs-dependencies="isVisible"&gt;
  마법 패널 내용
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </div>
    </section>

    <!-- 라이브 폼 - 개선된 디자인 -->
    <section class="relative">
      <div class="absolute inset-0 bg-gradient-to-r from-emerald-50/50 to-teal-50/50 rounded-3xl"></div>
      <div class="relative bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl rounded-3xl overflow-hidden">
        <div class="bg-gradient-to-r from-emerald-500 to-teal-500 px-8 py-6">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
              <i class="fas fa-edit text-white"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold text-white">라이브 프로필 편집기</h2>
              <p class="text-emerald-100">실시간 양방향 데이터 바인딩</p>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- 입력 폼 -->
            <div class="space-y-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">✏️ 정보 입력</h3>
              <form data-hbs-form="userProfile" class="space-y-4">
                <div class="relative">
                  <input 
                    type="text" 
                    name="name"
                    class="w-full px-6 py-4 bg-gray-50 border-2 border-gray-200 rounded-2xl focus:border-emerald-500 focus:bg-white transition-all duration-200 placeholder-gray-400"
                    placeholder="당신의 이름을 입력하세요"
                    data-hbs-input="userName"
                  >
                  <div class="absolute right-4 top-4 text-gray-400">
                    <i class="fas fa-user"></i>
                  </div>
                </div>
                <div class="relative">
                  <input 
                    type="email" 
                    name="email"
                    class="w-full px-6 py-4 bg-gray-50 border-2 border-gray-200 rounded-2xl focus:border-emerald-500 focus:bg-white transition-all duration-200 placeholder-gray-400"
                    placeholder="your@email.com"
                    data-hbs-input="userEmail"
                  >
                  <div class="absolute right-4 top-4 text-gray-400">
                    <i class="fas fa-envelope"></i>
                  </div>
                </div>
                <div class="relative">
                  <textarea 
                    name="message"
                    class="w-full px-6 py-4 bg-gray-50 border-2 border-gray-200 rounded-2xl focus:border-emerald-500 focus:bg-white transition-all duration-200 placeholder-gray-400 resize-none"
                    rows="4"
                    placeholder="자기소개를 작성해보세요..."
                    data-hbs-input="userMessage"
                  ></textarea>
                  <div class="absolute right-4 top-4 text-gray-400">
                    <i class="fas fa-comment"></i>
                  </div>
                </div>
              </form>
            </div>
            
            <!-- 실시간 미리보기 -->
            <div class="space-y-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-4">👀 실시간 미리보기</h3>
              <div class="bg-gradient-to-br from-emerald-50 to-teal-50 border-2 border-emerald-200 rounded-2xl p-8 min-h-[300px]">
                <div class="text-center space-y-4">
                  <div class="w-20 h-20 bg-gradient-to-r from-emerald-400 to-teal-400 rounded-full flex items-center justify-center mx-auto text-white text-2xl font-bold">
                    <span data-hbs-state="userName" class="first-letter-only">?</span>
                  </div>
                  <div>
                    <h4 class="text-2xl font-bold text-gray-900" data-hbs-state="userName">이름을 입력해주세요</h4>
                    <p class="text-emerald-600 mt-1" data-hbs-state="userEmail">이메일을 입력해주세요</p>
                  </div>
                  <div class="bg-white/50 rounded-xl p-4 text-left">
                    <div class="text-gray-600 text-sm mb-2">💬 자기소개</div>
                    <p class="text-gray-800" data-hbs-state="userMessage">자기소개를 작성해주세요</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- 동적 할일 목록 -->
    <section class="relative">
      <div class="absolute inset-0 bg-gradient-to-r from-blue-50/50 to-indigo-50/50 rounded-3xl"></div>
      <div class="relative bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl rounded-3xl overflow-hidden">
        <div class="bg-gradient-to-r from-blue-500 to-indigo-500 px-8 py-6">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center">
              <i class="fas fa-list-check text-white"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold text-white">스마트 할일 목록</h2>
              <p class="text-blue-100">동적 리스트 관리 시스템</p>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <div class="flex gap-4 mb-8">
            <div class="flex-1 relative">
              <input 
                type="text" 
                class="w-full px-6 py-4 bg-gray-50 border-2 border-gray-200 rounded-2xl focus:border-blue-500 focus:bg-white transition-all duration-200 placeholder-gray-400"
                placeholder="새로운 할일을 입력하세요..."
                data-hbs-input="newItem"
              >
              <div class="absolute right-4 top-4 text-gray-400">
                <i class="fas fa-plus"></i>
              </div>
            </div>
            <button 
              class="group relative overflow-hidden bg-gradient-to-r from-blue-500 to-indigo-500 text-white px-8 py-4 rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200"
              data-hbs-click="addListItem"
            >
              <i class="fas fa-plus mr-2"></i>
              추가
              <div class="absolute inset-0 bg-white/0 group-hover:bg-white/10 transition-colors duration-200"></div>
            </button>
          </div>
          
          <div 
            id="dynamic-list"
            class="space-y-3 min-h-[200px] p-6 bg-gradient-to-br from-blue-50/30 to-indigo-50/30 rounded-2xl border border-blue-100"
            data-hbs-component="dynamicList"
            data-hbs-dependencies="listItems"
          >
            <div class="text-center text-gray-500 py-8">
              <i class="fas fa-clipboard-list text-4xl mb-4 text-gray-300"></i>
              <p>할일을 추가해보세요! 🚀</p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- 개발자 도구 패널 -->
    <section class="relative">
      <div class="absolute inset-0 bg-gradient-to-r from-gray-900 via-gray-800 to-black rounded-3xl"></div>
      <div class="relative bg-gradient-to-r from-gray-900/95 via-gray-800/95 to-black/95 backdrop-blur-sm border border-gray-700 shadow-2xl rounded-3xl overflow-hidden">
        <div class="bg-gradient-to-r from-gray-800 to-gray-900 px-8 py-6 border-b border-gray-700">
          <div class="flex items-center gap-3">
            <div class="w-10 h-10 bg-green-500/20 rounded-xl flex items-center justify-center border border-green-500/30">
              <i class="fas fa-terminal text-green-400"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold text-white">Developer Console</h2>
              <p class="text-gray-400">실시간 상태 디버깅 도구</p>
            </div>
          </div>
        </div>
        
        <div class="p-8">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            <button 
              class="group bg-green-500/10 hover:bg-green-500/20 border border-green-500/30 text-green-400 px-6 py-4 rounded-xl font-mono text-sm transition-all duration-200 hover:scale-105" 
              onclick="HBS.showState()"
            >
              <i class="fas fa-database mr-2"></i>
              Show State
            </button>
            <button 
              class="group bg-blue-500/10 hover:bg-blue-500/20 border border-blue-500/30 text-blue-400 px-6 py-4 rounded-xl font-mono text-sm transition-all duration-200 hover:scale-105" 
              onclick="HBS.showComponents()"
            >
              <i class="fas fa-cube mr-2"></i>
              Components
            </button>
            <button 
              class="group bg-yellow-500/10 hover:bg-yellow-500/20 border border-yellow-500/30 text-yellow-400 px-6 py-4 rounded-xl font-mono text-sm transition-all duration-200 hover:scale-105" 
              onclick="HBS.startPerformanceMonitor()"
            >
              <i class="fas fa-chart-line mr-2"></i>
              Monitor
            </button>
            <button 
              class="group bg-purple-500/10 hover:bg-purple-500/20 border border-purple-500/30 text-purple-400 px-6 py-4 rounded-xl font-mono text-sm transition-all duration-200 hover:scale-105" 
              onclick="HBS.enableLiveEdit()"
            >
              <i class="fas fa-edit mr-2"></i>
              Live Edit
            </button>
          </div>
          
          <div class="bg-black/50 rounded-2xl p-6 border border-gray-700">
            <div class="flex items-center gap-2 mb-4">
              <div class="flex gap-1">
                <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              </div>
              <span class="text-gray-400 text-sm font-mono">browser-console.js</span>
            </div>
            <div class="space-y-2 text-sm font-mono">
              <div class="text-green-400">
                <span class="text-gray-500">></span> HBS.setState("key", "value")
                <span class="text-gray-600 ml-4">// 상태 설정</span>
              </div>
              <div class="text-blue-400">
                <span class="text-gray-500">></span> HBS.getState("key")
                <span class="text-gray-600 ml-4">// 상태 조회</span>
              </div>
              <div class="text-purple-400">
                <span class="text-gray-500">></span> HBS.showState()
                <span class="text-gray-600 ml-4">// 모든 상태 출력</span>
              </div>
              <div class="text-yellow-400">
                <span class="text-gray-500">></span> HBS.enableLiveEdit()
                <span class="text-gray-600 ml-4">// 라이브 편집 모드</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

  </div>

  <!-- 키보드 단축키 안내 -->
  <div class="mt-16 text-center bg-gradient-to-r from-primary-50 to-blue-50 rounded-2xl p-8">
    <h3 class="text-xl font-semibold text-gray-900 mb-4">⚡ 키보드 단축키</h3>
    <div class="flex items-center justify-center gap-8 text-sm text-gray-600">
      <div class="flex items-center gap-2">
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Alt</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Shift</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">H</kbd>
        <span class="ml-2">도움말</span>
      </div>
      <div class="flex items-center gap-2">
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Alt</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Shift</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">C</kbd>
        <span class="ml-2">전체 클래스</span>
      </div>
      <div class="flex items-center gap-2">
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Alt</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">Shift</kbd>
        <span>+</span>
        <kbd class="px-3 py-1 bg-white border border-gray-300 rounded-lg font-mono text-xs">S</kbd>
        <span class="ml-2">클래스 검색</span>
      </div>
    </div>
  </div>

</div>

<script>
// 카운터 감소 함수
window.decrementCount = function() {
  const current = parseInt(HBS.getState('counter')) || 0;
  HBS.setState('counter', Math.max(0, current - 1));
};

// 개선된 토글 패널 업데이트
function updateTogglePanel(element, newValue) {
  if (newValue) {
    element.style.display = 'block';
    element.style.opacity = '1';
    element.style.transform = 'scale(1)';
  } else {
    element.style.opacity = '0';
    element.style.transform = 'scale(0.9)';
    setTimeout(() => {
      element.style.display = 'none';
    }, 300);
  }
}

// 리스트 아이템 추가
window.addListItem = function() {
  const newItem = HBS.getState('newItem');
  if (!newItem || newItem.trim() === '') return;
  
  const currentList = HBS.getState('listItems') || [];
  currentList.push({
    id: Date.now(),
    text: newItem.trim(),
    completed: false
  });
  
  HBS.setState('listItems', currentList);
  HBS.setState('newItem', '');
  
  // 입력 필드 비우기
  const input = document.querySelector('[data-hbs-input="newItem"]');
  if (input) input.value = '';
};

// 개선된 동적 리스트 업데이트
function updateDynamicList(element, newValue) {
  const items = newValue || [];
  
  if (items.length === 0) {
    element.innerHTML = `
      <div class="text-center text-gray-500 py-8">
        <i class="fas fa-clipboard-list text-4xl mb-4 text-gray-300"></i>
        <p>할일을 추가해보세요! 🚀</p>
      </div>
    `;
    return;
  }
  
  element.innerHTML = items.map((item, index) => `
    <div class="group flex items-center justify-between p-4 bg-white/70 rounded-xl shadow-sm hover:shadow-md transition-all duration-200 transform hover:-translate-y-1 ${item.completed ? 'opacity-60' : ''}" style="animation: slideIn 0.3s ease-out ${index * 0.1}s both">
      <div class="flex items-center gap-4">
        <button 
          class="w-6 h-6 rounded-full border-2 transition-all duration-200 ${item.completed ? 'bg-green-500 border-green-500' : 'border-gray-300 hover:border-green-400'} flex items-center justify-center"
          onclick="toggleTodo(${item.id})"
        >
          ${item.completed ? '<i class="fas fa-check text-white text-xs"></i>' : ''}
        </button>
        <span class="${item.completed ? 'line-through text-gray-500' : 'text-gray-800 font-medium'}">${item.text}</span>
      </div>
      <button 
        class="opacity-0 group-hover:opacity-100 bg-red-500 text-white px-3 py-1 rounded-lg text-sm hover:bg-red-600 transition-all duration-200"
        onclick="removeItem(${item.id})"
      >
        <i class="fas fa-trash text-xs"></i>
      </button>
    </div>
  `).join('');
}

// 할일 토글
window.toggleTodo = function(id) {
  const todos = HBS.getState('listItems') || [];
  const todo = todos.find(t => t.id === id);
  if (todo) {
    todo.completed = !todo.completed;
    HBS.setState('listItems', todos);
  }
};

// 아이템 제거
window.removeItem = function(id) {
  const currentList = HBS.getState('listItems') || [];
  const newList = currentList.filter(item => item.id !== id);
  HBS.setState('listItems', newList);
};

// 이름 첫 글자만 표시하는 함수
function updateFirstLetter() {
  document.querySelectorAll('.first-letter-only').forEach(el => {
    const name = HBS.getState('userName');
    el.textContent = (name && name.trim()) ? name.trim()[0].toUpperCase() : '?';
  });
}

// 초기 상태 설정
document.addEventListener('DOMContentLoaded', function() {
  setTimeout(() => {
    HBS.setState('counter', 0);
    HBS.setState('isVisible', false);
    HBS.setState('listItems', []);
    HBS.setState('userName', '');
    HBS.setState('userEmail', '');
    HBS.setState('userMessage', '');
    
    // 이름 변경 감지
    const originalSetState = HBS.setState.bind(HBS);
    HBS.setState = function(key, value) {
      const result = originalSetState(key, value);
      if (key === 'userName') {
        updateFirstLetter();
      }
      return result;
    };
    
    updateFirstLetter();
  }, 100);
});

// 슬라이드인 애니메이션 CSS
const style = document.createElement('style');
style.textContent = `
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
`;
document.head.appendChild(style);
</script>