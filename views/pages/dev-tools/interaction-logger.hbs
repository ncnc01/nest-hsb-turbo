<!-- Interaction Logger Detail Page -->
<div class="min-h-screen bg-gray-50">
  <!-- Header Section -->
  <div class="bg-gradient-to-r from-blue-500 to-cyan-600 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="flex items-center justify-between">
        <div>
          <div class="flex items-center space-x-3">
            <a href="/dev-tools" class="text-blue-100 hover:text-white transition">
              <i class="fas fa-arrow-left"></i>
            </a>
            <h1 class="text-3xl font-bold">{{title}}</h1>
          </div>
          <p class="text-blue-100 mt-2">{{subtitle}}</p>
        </div>
        <button onclick="window.interactionLogger.showDeveloperToolsModal()" 
                class="bg-white/20 hover:bg-white/30 backdrop-blur-sm px-4 py-2 rounded-lg transition">
          <i class="fas fa-cog mr-2"></i>설정 열기
        </button>
      </div>
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Quick Actions -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8">
      <h2 class="text-lg font-semibold text-gray-900 mb-4">빠른 실행</h2>
      <div class="flex flex-wrap gap-3">
        <button onclick="exportInteractionLogs()" 
                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition">
          <i class="fas fa-download mr-2"></i>로그 내보내기
        </button>
        <button onclick="showLoggerStatus()" 
                class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition">
          <i class="fas fa-info-circle mr-2"></i>상태 확인
        </button>
        <button onclick="if(confirm('모든 로그를 삭제하시겠습니까?')) clearInteractionLogs()" 
                class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition">
          <i class="fas fa-trash mr-2"></i>로그 삭제
        </button>
        <button onclick="window.interactionLogger.showDeveloperToolsModal()" 
                class="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg transition">
          <i class="fas fa-sliders-h mr-2"></i>설정 모달
        </button>
      </div>
    </div>

    <!-- Features Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <div>
        <h2 class="text-xl font-bold text-gray-900 mb-4">로깅 기능</h2>
        <div class="space-y-4">
          {{#each features}}
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
            <div class="flex items-start space-x-3">
              <span class="text-2xl">{{icon}}</span>
              <div class="flex-1">
                <h3 class="font-semibold text-gray-900">{{name}}</h3>
                <p class="text-sm text-gray-600 mt-1">{{description}}</p>
                <ul class="mt-2 space-y-1">
                  {{#each details}}
                  <li class="text-xs text-gray-500 flex items-center">
                    <i class="fas fa-check-circle text-green-500 mr-1"></i>
                    {{this}}
                  </li>
                  {{/each}}
                </ul>
              </div>
            </div>
          </div>
          {{/each}}
        </div>
      </div>

      <div>
        <!-- Commands Section -->
        <div class="mb-8">
          <h2 class="text-xl font-bold text-gray-900 mb-4">콘솔 명령어</h2>
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
            {{#each commands}}
            <div class="p-4 {{#unless @first}}border-t border-gray-100{{/unless}}">
              <code class="text-sm font-mono bg-gray-100 px-2 py-1 rounded text-blue-600">{{name}}</code>
              <p class="text-sm text-gray-700 mt-2">{{description}}</p>
              <p class="text-xs text-gray-500 mt-1">
                <i class="fas fa-info-circle mr-1"></i>{{usage}}
              </p>
            </div>
            {{/each}}
          </div>
        </div>

        <!-- Shortcuts Section -->
        <div>
          <h2 class="text-xl font-bold text-gray-900 mb-4">키보드 단축키</h2>
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
            <div class="space-y-3">
              {{#each shortcuts}}
              <div class="flex items-center justify-between">
                <kbd class="bg-gray-100 px-3 py-1 rounded text-sm font-mono">{{keys}}</kbd>
                <span class="text-sm text-gray-600">{{action}}</span>
              </div>
              {{/each}}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Live Logger Status -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
      <h2 class="text-xl font-bold text-gray-900 mb-4">실시간 로거 상태</h2>
      <div id="logger-status" class="grid grid-cols-2 md:grid-cols-4 gap-4">
        <!-- Status will be populated by JavaScript -->
      </div>
    </div>

    <!-- Usage Guide -->
    <div class="mt-8 bg-gradient-to-r from-gray-700 to-gray-900 rounded-xl p-8 text-white">
      <h2 class="text-2xl font-bold mb-4">사용 가이드</h2>
      <div class="grid md:grid-cols-2 gap-6">
        <div>
          <h3 class="text-lg font-semibold mb-2 text-blue-300">기본 사용법</h3>
          <ol class="space-y-2 text-sm">
            <li class="flex">
              <span class="mr-2 text-blue-400">1.</span>
              <span>페이지 로드 시 자동으로 로깅이 시작됩니다</span>
            </li>
            <li class="flex">
              <span class="mr-2 text-blue-400">2.</span>
              <span>Ctrl+Shift+L로 설정 모달을 열어 옵션을 조정합니다</span>
            </li>
            <li class="flex">
              <span class="mr-2 text-blue-400">3.</span>
              <span>필요한 로깅 타입만 활성화하여 사용합니다</span>
            </li>
            <li class="flex">
              <span class="mr-2 text-blue-400">4.</span>
              <span>exportInteractionLogs()로 수집된 데이터를 내보냅니다</span>
            </li>
          </ol>
        </div>
        <div>
          <h3 class="text-lg font-semibold mb-2 text-yellow-300">주의사항</h3>
          <ul class="space-y-2 text-sm">
            <li class="flex items-start">
              <i class="fas fa-exclamation-triangle text-yellow-400 mr-2 mt-0.5"></i>
              <span>비밀번호 필드는 보안상 로깅되지 않습니다</span>
            </li>
            <li class="flex items-start">
              <i class="fas fa-exclamation-triangle text-yellow-400 mr-2 mt-0.5"></i>
              <span>로그는 localStorage에 최대 1000개까지 저장됩니다</span>
            </li>
            <li class="flex items-start">
              <i class="fas fa-exclamation-triangle text-yellow-400 mr-2 mt-0.5"></i>
              <span>성능 영향을 최소화하기 위해 쓰로틀링이 적용됩니다</span>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Update logger status in real-time
function updateLoggerStatus() {
  if (!window.interactionLogger) return;
  
  const statusDiv = document.getElementById('logger-status');
  const options = window.interactionLogger.options;
  const logs = JSON.parse(localStorage.getItem('interactionLogs') || '[]');
  
  const statusHTML = `
    <div class="text-center">
      <div class="text-2xl font-bold text-gray-900">${logs.length}</div>
      <div class="text-sm text-gray-600">저장된 로그</div>
    </div>
    <div class="text-center">
      <div class="text-2xl font-bold ${options.enableScrollLogging ? 'text-green-600' : 'text-gray-400'}">
        ${options.enableScrollLogging ? 'ON' : 'OFF'}
      </div>
      <div class="text-sm text-gray-600">스크롤 로깅</div>
    </div>
    <div class="text-center">
      <div class="text-2xl font-bold ${options.enableClickLogging ? 'text-green-600' : 'text-gray-400'}">
        ${options.enableClickLogging ? 'ON' : 'OFF'}
      </div>
      <div class="text-sm text-gray-600">클릭 로깅</div>
    </div>
    <div class="text-center">
      <div class="text-2xl font-bold ${options.enableKeyboardLogging ? 'text-green-600' : 'text-gray-400'}">
        ${options.enableKeyboardLogging ? 'ON' : 'OFF'}
      </div>
      <div class="text-sm text-gray-600">키보드 로깅</div>
    </div>
  `;
  
  statusDiv.innerHTML = statusHTML;
}

// Update status on page load and periodically
document.addEventListener('DOMContentLoaded', () => {
  updateLoggerStatus();
  setInterval(updateLoggerStatus, 2000);
});

// Also update when returning to the page
document.addEventListener('turbo:load', updateLoggerStatus);
</script>