{{#if error}}
<div class="p-6">
  <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
    {{error}}
  </div>
  <div class="mt-4">
    <a href="/inquiry" data-turbo-frame="main-content" class="text-primary-600 hover:text-primary-700">
      ← 문의사항 목록으로 돌아가기
    </a>
  </div>
</div>
{{else}}
<div class="space-y-6">
  <!-- Header -->
  <div class="flex items-center space-x-4">
    <a href="/inquiry/{{inquiry.id}}" data-turbo-frame="main-content" class="text-gray-500 hover:text-gray-700">
      <i class="fas fa-arrow-left text-lg"></i>
    </a>
    <div>
      <h1 class="text-2xl font-bold text-gray-900">문의사항 수정</h1>
      <p class="text-gray-600 mt-1">문의사항 #{{inquiry.id}} 정보를 수정합니다</p>
    </div>
  </div>

  <div class="max-w-4xl mx-auto">
    <form id="edit-inquiry-form" class="space-y-6">
      
      <!-- Basic Information -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">기본 정보</h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              제목 <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              name="title"
              value="{{inquiry.title}}"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="문의사항 제목을 입력하세요"
            >
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              카테고리 <span class="text-red-500">*</span>
            </label>
            <select 
              name="category" 
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
            >
              <option value="">카테고리를 선택하세요</option>
              {{#each categories}}
              <option value="{{value}}" {{#if (eq ../inquiry.category value)}}selected{{/if}}>
                {{label}}
              </option>
              {{/each}}
            </select>
          </div>
        </div>
      </div>

      <!-- Customer Information -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">고객 정보</h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              고객명 <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              name="customerName"
              value="{{inquiry.customerName}}"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="고객 이름을 입력하세요"
            >
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">
              이메일 <span class="text-red-500">*</span>
            </label>
            <input
              type="email"
              name="customerEmail"
              value="{{inquiry.customerEmail}}"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="고객 이메일을 입력하세요"
            >
          </div>
          
          <div class="md:col-span-2">
            <label class="block text-sm font-medium text-gray-700 mb-1">전화번호</label>
            <input
              type="tel"
              name="customerPhone"
              value="{{inquiry.customerPhone}}"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="고객 전화번호를 입력하세요 (선택사항)"
            >
          </div>
        </div>
      </div>

      <!-- Status and Priority -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">상태 및 관리</h3>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">상태</label>
            <select 
              name="status"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
            >
              {{#each statuses}}
              <option value="{{value}}" {{#if (eq ../inquiry.status value)}}selected{{/if}}>
                {{label}}
              </option>
              {{/each}}
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">우선순위</label>
            <select 
              name="priority"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
            >
              {{#each priorities}}
              <option value="{{value}}" {{#if (eq ../inquiry.priority value)}}selected{{/if}}>
                {{label}}
              </option>
              {{/each}}
            </select>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">담당자</label>
            <input
              type="text"
              name="assignedTo"
              value="{{inquiry.assignedTo}}"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
              placeholder="담당자를 입력하세요"
            >
          </div>
        </div>
      </div>

      <!-- Content -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-900">
            문의 내용 <span class="text-red-500">*</span>
          </h3>
          
          <!-- Editor Library Selector -->
          <div class="flex items-center space-x-2">
            <label class="text-sm text-gray-600">에디터:</label>
            <select 
              id="editor-library-select" 
              class="text-sm border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-primary-500"
              onchange="updateEditor(this.value)"
            >
              <option value="basic">기본 Textarea</option>
              <option value="tinymce">TinyMCE</option>
              <option value="ckeditor5">CKEditor5</option>
              <option value="quill">Quill.js</option>
              <option value="monaco">Monaco Editor</option>
              <option value="prosemirror">ProseMirror</option>
            </select>
          </div>
        </div>
        
        <!-- Editor Container -->
        <div id="editor-container">
          <textarea
            id="content-textarea"
            name="content"
            rows="10"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
            placeholder="문의사항의 상세 내용을 입력하세요..."
          >{{inquiry.content}}</textarea>
        </div>
      </div>

      <!-- Response Section -->
      {{#if inquiry.response}}
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">기존 답변</h3>
        
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
          <div class="flex items-center mb-2">
            <i class="fas fa-reply text-blue-500 mr-2"></i>
            <span class="text-sm font-medium text-blue-800">
              {{#if inquiry.assignedTo}}{{inquiry.assignedTo}}{{else}}관리자{{/if}}
            </span>
            <span class="text-sm text-blue-600 ml-2">
              {{formatDate inquiry.responseAt}}
            </span>
          </div>
          <p class="text-blue-900 whitespace-pre-wrap">{{inquiry.response}}</p>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">답변 수정</label>
          <textarea
            name="response"
            rows="6"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
            placeholder="답변을 수정하거나 추가해주세요..."
          >{{inquiry.response}}</textarea>
        </div>
      </div>
      {{/if}}

      <!-- Form Actions -->
      <div class="flex items-center justify-between bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center space-x-3">
          <a 
            href="/inquiry/{{inquiry.id}}" 
                        class="bg-gray-100 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-200 transition-colors duration-200"
          >
            취소
          </a>
          
          <button 
            type="button"
            onclick="deleteInquiry('{{inquiry.id}}')"
            class="bg-red-100 text-red-800 px-6 py-2 rounded-md hover:bg-red-200 transition-colors duration-200"
          >
            <i class="fas fa-trash mr-2"></i>
            삭제
          </button>
        </div>
        
        <div class="flex items-center space-x-3">
          <button 
            type="button"
            onclick="saveDraft()"
            class="bg-yellow-100 text-yellow-800 px-6 py-2 rounded-md hover:bg-yellow-200 transition-colors duration-200"
          >
            <i class="fas fa-save mr-2"></i>
            임시저장
          </button>
          
          <button 
            type="submit"
            class="bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 transition-colors duration-200"
          >
            <i class="fas fa-check mr-2"></i>
            수정 완료
          </button>
        </div>
      </div>
    </form>
  </div>
</div>

<script>
// 폼 제출 처리
document.getElementById('edit-inquiry-form').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  
  // 에디터 내용 가져오기
  const editorType = document.getElementById('editor-library-select').value;
  const content = getEditorContent(editorType);
  formData.set('content', content);
  
  const data = Object.fromEntries(formData.entries());
  
  // 유효성 검사
  if (!validateForm(data)) {
    return;
  }
  
  try {
    const response = await fetch(`/inquiry/api/{{inquiry.id}}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'text/vnd.turbo-stream.html'
      },
      body: JSON.stringify(data)
    });
    
    if (response.ok) {
      const html = await response.text();
      document.body.insertAdjacentHTML('beforeend', html);
    } else {
      const error = await response.json();
      showError(error.message || '수정 중 오류가 발생했습니다.');
    }
  } catch (error) {
    showError('네트워크 오류가 발생했습니다.');
    console.error('Error updating inquiry:', error);
  }
});

// 폼 유효성 검사
function validateForm(data) {
  const errors = [];
  
  if (!data.title?.trim()) {
    errors.push('제목을 입력해주세요.');
  }
  
  if (!data.content?.trim()) {
    errors.push('문의 내용을 입력해주세요.');
  }
  
  if (!data.customerName?.trim()) {
    errors.push('고객명을 입력해주세요.');
  }
  
  if (!data.customerEmail?.trim()) {
    errors.push('고객 이메일을 입력해주세요.');
  } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(data.customerEmail)) {
    errors.push('올바른 이메일 형식을 입력해주세요.');
  }
  
  if (errors.length > 0) {
    showError(errors.join('\n'));
    return false;
  }
  
  return true;
}

// 에러 메시지 표시
function showError(message) {
  const existingError = document.querySelector('.form-error');
  if (existingError) {
    existingError.remove();
  }
  
  const errorDiv = document.createElement('div');
  errorDiv.className = 'form-error bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4';
  errorDiv.innerHTML = `
    <div class="flex">
      <i class="fas fa-exclamation-circle mr-2 mt-0.5"></i>
      <div>
        ${message.split('\n').map(msg => `<div>${msg}</div>`).join('')}
      </div>
    </div>
  `;
  
  document.querySelector('form').insertBefore(errorDiv, document.querySelector('form').firstChild);
  errorDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
}

// 삭제 함수
function deleteInquiry(id) {
  if (confirm('이 문의사항을 삭제하시겠습니까?')) {
    fetch(`/inquiry/api/${id}`, {
      method: 'DELETE',
      headers: {
        'Accept': 'text/vnd.turbo-stream.html'
      }
    }).then(response => {
      if (response.ok) {
        return response.text();
      }
    }).then(html => {
      if (html) {
        document.body.insertAdjacentHTML('beforeend', html);
      }
    });
  }
}

// 임시저장 기능
function saveDraft() {
  const formData = new FormData(document.getElementById('edit-inquiry-form'));
  const data = Object.fromEntries(formData.entries());
  
  // 에디터 내용 포함
  const editorType = document.getElementById('editor-library-select').value;
  data.content = getEditorContent(editorType);
  
  localStorage.setItem('inquiry_edit_draft_{{inquiry.id}}', JSON.stringify(data));
  
  // 임시저장 알림
  const notification = document.createElement('div');
  notification.className = 'fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded shadow-lg z-50';
  notification.innerHTML = '<i class="fas fa-check mr-2"></i>임시저장 되었습니다.';
  document.body.appendChild(notification);
  
  setTimeout(() => {
    notification.remove();
  }, 3000);
}

// 페이지 로드 시 임시저장 데이터 복원
document.addEventListener('DOMContentLoaded', function() {
  const draft = localStorage.getItem('inquiry_edit_draft_{{inquiry.id}}');
  if (draft) {
    try {
      const data = JSON.parse(draft);
      const form = document.getElementById('edit-inquiry-form');
      
      // 폼 필드 복원
      Object.keys(data).forEach(key => {
        const field = form.querySelector(`[name="${key}"]`);
        if (field && data[key] !== null && data[key] !== undefined) {
          field.value = data[key];
        }
      });
      
      // 임시저장된 데이터가 있음을 알림
      if (Object.keys(data).length > 0) {
        const notification = document.createElement('div');
        notification.className = 'bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded mb-4';
        notification.innerHTML = `
          <div class="flex justify-between items-center">
            <div><i class="fas fa-info-circle mr-2"></i>임시저장된 수정 내용이 복원되었습니다.</div>
            <button onclick="clearDraft()" class="text-blue-600 hover:text-blue-800 underline text-sm">삭제</button>
          </div>
        `;
        document.querySelector('form').insertBefore(notification, document.querySelector('form').firstChild);
      }
    } catch (error) {
      console.error('임시저장 데이터 복원 실패:', error);
    }
  }
});

// 임시저장 데이터 삭제
function clearDraft() {
  localStorage.removeItem('inquiry_edit_draft_{{inquiry.id}}');
  location.reload();
}

// 에디터 라이브러리 전환 함수
function updateEditor(library) {
  const container = document.getElementById('editor-container');
  const currentValue = getEditorContent(document.getElementById('editor-library-select').value) || '';
  
  switch(library) {
    case 'basic':
      container.innerHTML = `
        <textarea
          id="content-textarea"
          name="content"
          rows="10"
          required
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          placeholder="문의사항의 상세 내용을 입력하세요..."
        >${currentValue}</textarea>
      `;
      break;
    case 'tinymce':
      renderTinyMCE(container, currentValue);
      break;
    case 'ckeditor5':
      renderCKEditor5(container, currentValue);
      break;
    case 'quill':
      renderQuill(container, currentValue);
      break;
    case 'monaco':
      renderMonaco(container, currentValue);
      break;
    case 'prosemirror':
      renderProseMirror(container, currentValue);
      break;
  }
}

// 에디터 내용 가져오기
function getEditorContent(editorType) {
  const textarea = document.querySelector('#editor-container textarea[name="content"]');
  return textarea ? textarea.value : '';
}

// 에디터 렌더링 함수들 (데모용)
function renderTinyMCE(container, value) {
  container.innerHTML = `
    <div class="border border-gray-300 rounded-md overflow-hidden">
      <div class="bg-yellow-50 border-b border-yellow-200 px-3 py-2">
        <div class="flex items-center">
          <i class="fas fa-edit text-yellow-600 mr-2"></i>
          <span class="text-yellow-800 font-medium text-sm">TinyMCE Editor</span>
        </div>
      </div>
      <textarea
        name="content"
        rows="10"
        required
        class="w-full px-3 py-2 border-0 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none"
        placeholder="TinyMCE 에디터로 문의사항을 수정하세요..."
      >${value}</textarea>
    </div>
  `;
}

function renderCKEditor5(container, value) {
  container.innerHTML = `
    <div class="border border-gray-300 rounded-md overflow-hidden">
      <div class="bg-blue-50 border-b border-blue-200 px-3 py-2">
        <div class="flex items-center">
          <i class="fas fa-edit text-blue-600 mr-2"></i>
          <span class="text-blue-800 font-medium text-sm">CKEditor5</span>
        </div>
      </div>
      <textarea
        name="content"
        rows="10"
        required
        class="w-full px-3 py-2 border-0 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none"
        placeholder="CKEditor5로 문의사항을 수정하세요..."
      >${value}</textarea>
    </div>
  `;
}

function renderQuill(container, value) {
  container.innerHTML = `
    <div class="border border-gray-300 rounded-md overflow-hidden">
      <div class="bg-green-50 border-b border-green-200 px-3 py-2">
        <div class="flex items-center">
          <i class="fas fa-edit text-green-600 mr-2"></i>
          <span class="text-green-800 font-medium text-sm">Quill.js Editor</span>
        </div>
      </div>
      <textarea
        name="content"
        rows="10"
        required
        class="w-full px-3 py-2 border-0 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none"
        placeholder="Quill.js 에디터로 문의사항을 수정하세요..."
      >${value}</textarea>
    </div>
  `;
}

function renderMonaco(container, value) {
  container.innerHTML = `
    <div class="border border-gray-300 rounded-md overflow-hidden">
      <div class="bg-purple-50 border-b border-purple-200 px-3 py-2">
        <div class="flex items-center">
          <i class="fas fa-code text-purple-600 mr-2"></i>
          <span class="text-purple-800 font-medium text-sm">Monaco Editor</span>
        </div>
      </div>
      <textarea
        name="content"
        rows="10"
        required
        class="w-full px-3 py-2 border-0 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none font-mono text-sm"
        placeholder="Monaco 에디터로 문의사항을 수정하세요..."
      >${value}</textarea>
    </div>
  `;
}

function renderProseMirror(container, value) {
  container.innerHTML = `
    <div class="border border-gray-300 rounded-md overflow-hidden">
      <div class="bg-red-50 border-b border-red-200 px-3 py-2">
        <div class="flex items-center">
          <i class="fas fa-edit text-red-600 mr-2"></i>
          <span class="text-red-800 font-medium text-sm">ProseMirror Editor</span>
        </div>
      </div>
      <textarea
        name="content"
        rows="10"
        required
        class="w-full px-3 py-2 border-0 focus:outline-none focus:ring-2 focus:ring-primary-500 resize-none"
        placeholder="ProseMirror 에디터로 문의사항을 수정하세요..."
      >${value}</textarea>
    </div>
  `;
}

// 날짜 포맷팅 함수
function formatDate(dateString) {
  const date = new Date(dateString);
  return date.toLocaleDateString('ko-KR') + ' ' + date.toLocaleTimeString('ko-KR', { hour: '2-digit', minute: '2-digit' });
}
</script>
{{/if}}
